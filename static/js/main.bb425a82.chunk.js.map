{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app-footer/index.js","components/app-footer/app-foorter.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","important","unvisible","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","filter","buttons","name","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdded","AppFooter","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","addItem","text","newItem","searchItem","items","length","toLowerCase","indexOf","filterItem","console","log","onToggleProperty","arr","propName","oldItem","visibleItems","doneCount","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb425a82.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n\r\n","import React from 'react'\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n    return (\r\n        <div className='app-header'>\r\n            <h1>ToDo list Aplication</h1>\r\n            <h2>{toDo} more todo, {done} done</h2>\r\n        </div>)\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\n\r\nexport default class SearchPanel extends Component  {\r\n    state = {\r\n        term: \"\"\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value\r\n        this.setState({\r\n            term\r\n        })\r\n        this.props.onSearchChange(term)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input type=\"text\"      \r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                value={ this.state.term }\r\n                onChange={ this.onSearchChange }\r\n                />\r\n        );\r\n    }\r\n}\r\n\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css'\r\n\r\nexport default class ToDoListItem extends Component{\r\n   \r\n    render(){\r\n        const { label, done, important, unvisible, onDeleted, onToggleImportant, onToggleDone } = this.props;\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done'\r\n        } \r\n\r\n        if (important) {\r\n            classNames += ' important'\r\n        }\r\n        if (unvisible) {\r\n            classNames = 'd-none'\r\n        }\r\n        return (\r\n            <span className={ classNames }>\r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n                    onClick = { onToggleDone }\r\n                    >\r\n                    {label}\r\n                </span>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={ onToggleImportant }\r\n                        >\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={ onDeleted }\r\n                        >\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react'\r\nimport TodoListItem from '../todo-list-item'\r\nimport './todo-list.css'\r\n\r\n\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    const elements = todos.map((item) => {\r\n        const { id, ...itemProps } = item\r\n        return(\r\n            <li key={id} className='list-group-item'>\r\n                <TodoListItem \r\n                    { ...itemProps }\r\n                    onDeleted = { () => onDeleted(id) }\r\n                    onToggleDone = { () => onToggleDone(id)}\r\n                    onToggleImportant = { () => onToggleImportant(id) }\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <ul className=\"list-group todo-list\">\r\n                { elements }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react'\r\n\r\nimport './item-status-filter.css';\r\n\r\n\r\nclass ItemStatusFilter extends Component {\r\n    state = {\r\n        filter: \"all\"\r\n    }\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ]\r\n\r\n    onFilterChange = (e) => {\r\n        const filter = e.target.name\r\n        this.setState({\r\n            filter\r\n        })\r\n        this.props.onFilterChange(filter)\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n        const { filter, onFilterChange } = this.props;\r\n        const isActive = filter === name\r\n        const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n        return (\r\n            <button type=\"button\"\r\n                className={ `btn ${clazz}` }\r\n                key={ name }\r\n                onClick={ () => onFilterChange(name) }\r\n            >{ label }</button>\r\n        )\r\n        })\r\n        return (\r\n            <div className=\"btn-group\">\r\n                { buttons }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemStatusFilter;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react'\r\n\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    \r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onAdded(this.state.label)\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <form className=\"add-panel d-flex\"\r\n                onSubmit={ this.onSubmit }> \r\n                    <input type=\"text\"\r\n                        className=\"form-control text-input\"\r\n                        placeholder=\"type to add\" \r\n                        onChange={ this.onLabelChange }\r\n                        value={ this.state.label }/>\r\n                    <button\r\n                        className=\"btn btn-outline-secondary btn-add\">\r\n                        <i className=\"fa fa-plus\" />\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}  ","import AppFooter from './app-foorter';\r\n\r\nexport default AppFooter;","import React from 'react'\r\n\r\nimport './app-footer.css'\r\n\r\nconst AppFooter = () => {\r\n    return (\r\n        <div className='app-footer'>\r\n            <p>©</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppFooter","import App from './app';\r\n\r\nexport default App","import React, { Component } from 'react'\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form'\r\nimport AppFooter from '../app-footer'\r\n\r\nimport './app.css'\r\n\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink cofee Drink cofee'),\r\n            this.createTodoItem('Make Awesome app'),\r\n            this.createTodoItem('Go to sleep')\r\n        ],\r\n        term: '',\r\n        filter: 'active' //  all, active, done\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            id: this.maxId++,\r\n            label,\r\n            done: false,\r\n            important: false\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) =>{\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id)\r\n            const before = todoData.slice(0, idx)\r\n            const after = todoData.slice(idx + 1)\r\n            const newArr = [ ...before, ...after]\r\n            return {\r\n                todoData: newArr\r\n            }  \r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text)\r\n        this.setState( ({ todoData }) => {\r\n            const newArr = [newItem, ...todoData, ]\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchItem = (items, term) => {\r\n        if (term.length === 0){\r\n            return items\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label\r\n                        .toLowerCase()\r\n                        .indexOf(term.toLowerCase()) > -1\r\n        })\r\n    }\r\n\r\n    filterItem = (items, filter) => {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items\r\n                \r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n                \r\n            case 'done':\r\n                return items.filter((item) => item.done)\r\n            \r\n            default:\r\n                return items\r\n        }\r\n    }\r\n    \r\n    onSearchChange = (term) => {\r\n        this.setState({ term })\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        console.log('filter', filter)\r\n        this.setState({ filter })\r\n    }\r\n\r\n    onToggleProperty = (arr, id, propName) => {\r\n            //1. update object\r\n            const idx = arr.findIndex((el) => el.id === id)\r\n            const oldItem = arr[idx]\r\n            const newItem = {\r\n                ...oldItem,\r\n                [propName]: !oldItem[propName]\r\n            }\r\n            //2. return & construct new Arr\r\n            return [ \r\n                    ...arr.slice(0, idx),\r\n                    newItem,\r\n                    ...arr.slice(idx + 1)\r\n            ]\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.onToggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n            \r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.onToggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { todoData, term, filter} = this.state\r\n        const visibleItems = this.filterItem(\r\n            this.searchItem(todoData, term),\r\n            filter)\r\n        const doneCount = todoData\r\n            .filter((item) => item.done === true)\r\n            .length\r\n        const todoCount = todoData.length - doneCount\r\n        \r\n        return(\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={ todoCount } done={ doneCount }/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchChange={ this.onSearchChange }/>\r\n                    <ItemStatusFilter \r\n                        onFilterChange={ this.onFilterChange }\r\n                        filter={ filter } />\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                    <ItemAddForm \r\n                        onAdded={ this.addItem }\r\n                    />\r\n                </div>\r\n\r\n                <TodoList \r\n                    todos={ visibleItems }\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleDone={ this.onToggleDone }\r\n                    onToggleImportant={ this.onToggleImportant }\r\n                />\r\n                <AppFooter />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/app';\r\n\r\n\r\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}